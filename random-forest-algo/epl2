{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#importing libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv('/home/sanju/Desktop/dsg/algo/football/2011.csv')\n",
    "#reading data\n",
    "data = data.append(pd.read_csv('/home/sanju/Desktop/dsg/algo/football/2012.csv'),ignore_index=True)\n",
    "data = data.append(pd.read_csv('/home/sanju/Desktop/dsg/algo/football/2013.csv'),ignore_index=True)\n",
    "data = data.append(pd.read_csv('/home/sanju/Desktop/dsg/algo/football/2014.csv'),ignore_index=True)\n",
    "\n",
    "#converting Data-Time to Day,Month, and Year.\n",
    "data ['Date'] = pd.to_datetime(data['Date'])\n",
    "data['day'] = data['Date'].dt.day\n",
    "data['year'] = data['Date'].dt.year\n",
    "data['month'] = data['Date'].dt.month\n",
    "#dropping Date-Time\n",
    "data = data.drop('Date',axis = 1)\n",
    "data['year'] = data['year'] - 2010"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team 1</th>\n",
       "      <th>Team 2</th>\n",
       "      <th>FT</th>\n",
       "      <th>HT</th>\n",
       "      <th>day</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aston Villa</td>\n",
       "      <td>West Ham</td>\n",
       "      <td>3-0</td>\n",
       "      <td>2-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blackburn</td>\n",
       "      <td>Everton</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Bolton</td>\n",
       "      <td>Fulham</td>\n",
       "      <td>0-0</td>\n",
       "      <td>0-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Chelsea</td>\n",
       "      <td>West Brom</td>\n",
       "      <td>6-0</td>\n",
       "      <td>2-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sunderland</td>\n",
       "      <td>Birmingham</td>\n",
       "      <td>2-2</td>\n",
       "      <td>1-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Team 1      Team 2   FT   HT  day  year  month\n",
       "0  Aston Villa    West Ham  3-0  2-0   14     0      8\n",
       "1    Blackburn     Everton  1-0  1-0   14     0      8\n",
       "2       Bolton      Fulham  0-0  0-0   14     0      8\n",
       "3      Chelsea   West Brom  6-0  2-0   14     0      8\n",
       "4   Sunderland  Birmingham  2-2  1-0   14     0      8"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Home</th>\n",
       "      <th>Away</th>\n",
       "      <th>FT</th>\n",
       "      <th>HT</th>\n",
       "      <th>Day</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aston Villa</td>\n",
       "      <td>West Ham</td>\n",
       "      <td>3-0</td>\n",
       "      <td>2-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Blackburn</td>\n",
       "      <td>Everton</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Bolton</td>\n",
       "      <td>Fulham</td>\n",
       "      <td>0-0</td>\n",
       "      <td>0-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Chelsea</td>\n",
       "      <td>West Brom</td>\n",
       "      <td>6-0</td>\n",
       "      <td>2-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sunderland</td>\n",
       "      <td>Birmingham</td>\n",
       "      <td>2-2</td>\n",
       "      <td>1-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Home        Away   FT   HT  Day  Year  Month\n",
       "0  Aston Villa    West Ham  3-0  2-0   14     0      8\n",
       "1    Blackburn     Everton  1-0  1-0   14     0      8\n",
       "2       Bolton      Fulham  0-0  0-0   14     0      8\n",
       "3      Chelsea   West Brom  6-0  2-0   14     0      8\n",
       "4   Sunderland  Birmingham  2-2  1-0   14     0      8"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns = ['Home','Away','FT','HT','Day','Year','Month']\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Man United        76\n",
       "Fulham            76\n",
       "Newcastle         76\n",
       "Everton           76\n",
       "Chelsea           76\n",
       "West Brom         76\n",
       "Sunderland        76\n",
       "Aston Villa       76\n",
       "Liverpool         76\n",
       "Stoke             76\n",
       "Arsenal           76\n",
       "Tottenham         76\n",
       "Man City          76\n",
       "Swansea           57\n",
       "Wigan             57\n",
       "Norwich           57\n",
       "West Ham          57\n",
       "QPR               38\n",
       "Southampton       38\n",
       "Blackburn         38\n",
       "Bolton            38\n",
       "Wolves            38\n",
       "Reading           19\n",
       "Hull              19\n",
       "Crystal Palace    19\n",
       "Birmingham        19\n",
       "Blackpool         19\n",
       "Cardiff           19\n",
       "Name: Home, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Teams Participated in the league over the 4 years\n",
    "data.Home.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Home</th>\n",
       "      <th>Away</th>\n",
       "      <th>FT</th>\n",
       "      <th>HT</th>\n",
       "      <th>Day</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>3-0</td>\n",
       "      <td>2-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>6</td>\n",
       "      <td>1-0</td>\n",
       "      <td>1-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>12</td>\n",
       "      <td>0-0</td>\n",
       "      <td>0-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>6-0</td>\n",
       "      <td>2-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>2-2</td>\n",
       "      <td>1-0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Home Away   FT   HT  Day  Year  Month\n",
       "0    9   16  3-0  2-0   14     0      8\n",
       "1   19    6  1-0  1-0   14     0      8\n",
       "2   20   12  0-0  0-0   14     0      8\n",
       "3    1    7  6-0  2-0   14     0      8\n",
       "4    8   25  2-2  1-0   14     0      8"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#assigning a number to each of the clubs\n",
    "data.loc[data.Home == 'Man United','Home'] = 0\n",
    "data.loc[data.Home == 'Chelsea','Home'] = 1\n",
    "data.loc[data.Home == 'Man City','Home'] = 2\n",
    "data.loc[data.Home == 'Tottenham','Home'] = 3\n",
    "data.loc[data.Home == 'Liverpool','Home'] = 4\n",
    "data.loc[data.Home == 'Arsenal','Home'] = 5\n",
    "data.loc[data.Home == 'Everton','Home'] = 6\n",
    "data.loc[data.Home == 'West Brom','Home'] = 7\n",
    "data.loc[data.Home == 'Sunderland','Home'] = 8\n",
    "data.loc[data.Home == 'Aston Villa','Home'] = 9\n",
    "data.loc[data.Home == 'Stoke','Home'] = 10\n",
    "data.loc[data.Home == 'Newcastle','Home'] = 11\n",
    "data.loc[data.Home == 'Fulham','Home'] = 12\n",
    "data.loc[data.Home == 'Swansea','Home'] = 13\n",
    "data.loc[data.Home == 'Wigan','Home'] = 14\n",
    "data.loc[data.Home == 'Norwich','Home'] = 15\n",
    "data.loc[data.Home == 'West Ham','Home'] = 16\n",
    "data.loc[data.Home == 'QPR','Home'] = 17\n",
    "data.loc[data.Home == 'Southampton','Home'] = 18\n",
    "data.loc[data.Home == 'Blackburn','Home'] = 19\n",
    "data.loc[data.Home == 'Bolton','Home'] = 20\n",
    "data.loc[data.Home == 'Wolves','Home'] = 21\n",
    "data.loc[data.Home == 'Reading','Home'] = 22\n",
    "data.loc[data.Home == 'Hull','Home'] = 23\n",
    "data.loc[data.Home == 'Crystal Palace','Home'] = 24\n",
    "data.loc[data.Home == 'Birmingham','Home'] = 25\n",
    "data.loc[data.Home == 'Blackpool','Home'] = 26\n",
    "data.loc[data.Home == 'Cardiff','Home'] = 27\n",
    "\n",
    "data.loc[data.Away == 'Man United','Away'] = 0\n",
    "data.loc[data.Away == 'Chelsea','Away'] = 1\n",
    "data.loc[data.Away == 'Man City','Away'] = 2\n",
    "data.loc[data.Away == 'Tottenham','Away'] = 3\n",
    "data.loc[data.Away == 'Liverpool','Away'] = 4\n",
    "data.loc[data.Away == 'Arsenal','Away'] = 5\n",
    "data.loc[data.Away == 'Everton','Away'] = 6\n",
    "data.loc[data.Away == 'West Brom','Away'] = 7\n",
    "data.loc[data.Away == 'Sunderland','Away'] = 8\n",
    "data.loc[data.Away == 'Aston Villa','Away'] = 9\n",
    "data.loc[data.Away == 'Stoke','Away'] = 10\n",
    "data.loc[data.Away == 'Newcastle','Away'] = 11\n",
    "data.loc[data.Away == 'Fulham','Away'] = 12\n",
    "data.loc[data.Away == 'Swansea','Away'] = 13\n",
    "data.loc[data.Away == 'Wigan','Away'] = 14\n",
    "data.loc[data.Away == 'Norwich','Away'] = 15\n",
    "data.loc[data.Away == 'West Ham','Away'] = 16\n",
    "data.loc[data.Away == 'QPR','Away'] = 17\n",
    "data.loc[data.Away == 'Southampton','Away'] = 18\n",
    "data.loc[data.Away == 'Blackburn','Away'] = 19\n",
    "data.loc[data.Away == 'Bolton','Away'] = 20\n",
    "data.loc[data.Away == 'Wolves','Away'] = 21\n",
    "data.loc[data.Away == 'Reading','Away'] = 22\n",
    "data.loc[data.Away == 'Hull','Away'] = 23\n",
    "data.loc[data.Away == 'Crystal Palace','Away'] = 24\n",
    "data.loc[data.Away == 'Birmingham','Away'] = 25\n",
    "data.loc[data.Away == 'Blackpool','Away'] = 26\n",
    "data.loc[data.Away == 'Cardiff','Away'] = 27\n",
    "\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#converting string features to numbers i.e FT'3-0' to FTHome-3, FTAway-0\n",
    "fth = []\n",
    "for i in range(0,len(data.FT)):\n",
    "    fth.append(data.FT[i][0])\n",
    "\n",
    "fta = []\n",
    "for i in range(0,len(data.FT)):\n",
    "    fta.append(data.FT[i][2])\n",
    "\n",
    "hth = []\n",
    "for i in range(0,len(data.HT)):\n",
    "    hth.append(data.HT[i][0])\n",
    "\n",
    "hta = []\n",
    "for i in range(0,len(data.HT)):\n",
    "    hta.append(data.HT[i][2])  \n",
    "\n",
    "data['FTHome'] = pd.Series(fth)\n",
    "data['FTAway'] = pd.Series(fta)\n",
    "data['HTHome'] = pd.Series(hth)\n",
    "data['HTAway'] = pd.Series(hta)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Home</th>\n",
       "      <th>Away</th>\n",
       "      <th>Day</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>FTHome</th>\n",
       "      <th>FTAway</th>\n",
       "      <th>HTHome</th>\n",
       "      <th>HTAway</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Home Away  Day  Year  Month FTHome FTAway HTHome HTAway\n",
       "0    9   16   14     0      8      3      0      2      0\n",
       "1   19    6   14     0      8      1      0      1      0\n",
       "2   20   12   14     0      8      0      0      0      0\n",
       "3    1    7   14     0      8      6      0      2      0\n",
       "4    8   25   14     0      8      2      2      1      0"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = data.drop(['FT','HT'],axis = 1)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#based on FinalTime goals assigning Win/Draw/Lose to the Home Team.\n",
    "winner = []\n",
    "for i in range(0,len(data)):\n",
    "    if(data.FTHome[i]>data.FTAway[i]):\n",
    "        winner.append(0)\n",
    "    elif(data.FTHome[i] == data.FTAway[i]):\n",
    "        winner.append(1)\n",
    "    else:\n",
    "        winner.append(2)\n",
    "\n",
    "data['W/D/L'] = pd.Series(winner)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Home</th>\n",
       "      <th>Away</th>\n",
       "      <th>Day</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>FTHome</th>\n",
       "      <th>FTAway</th>\n",
       "      <th>HTHome</th>\n",
       "      <th>HTAway</th>\n",
       "      <th>W/D/L</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Home Away  Day  Year  Month FTHome FTAway HTHome HTAway  W/D/L\n",
       "0    9   16   14     0      8      3      0      2      0      0\n",
       "1   19    6   14     0      8      1      0      1      0      0\n",
       "2   20   12   14     0      8      0      0      0      0      1\n",
       "3    1    7   14     0      8      6      0      2      0      0\n",
       "4    8   25   14     0      8      2      2      1      0      1"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head() #This the data we are applying the classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/sanju/anaconda2/lib/python2.7/site-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "# importing Random Forest classifier from sklearn\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "clf = RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
       "            max_depth=None, max_features='auto', max_leaf_nodes=None,\n",
       "            min_impurity_split=1e-07, min_samples_leaf=1,\n",
       "            min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "            n_estimators=10, n_jobs=1, oob_score=False, random_state=None,\n",
       "            verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#importing train_test_split to divide data into training and testing data\n",
    "from sklearn.cross_validation import train_test_split\n",
    "\n",
    "#extracting features from the data\n",
    "X = data[['Home','Away','Day','Month','Year','HTHome','HTAway']]\n",
    "Y = data['W/D/L']\n",
    "\n",
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.10)\n",
    "#training the classifier on the training data\n",
    "clf.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#predicting the results for the test data\n",
    "Y_pred = clf.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.618421052632\n"
     ]
    }
   ],
   "source": [
    "#measuring accuracy of our predcitions\n",
    "from sklearn.metrics import accuracy_score\n",
    "print accuracy_score(Y_pred,Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.19610865,  0.1933762 ,  0.16703843,  0.11707521,  0.07805974,\n",
       "        0.12128816,  0.1270536 ])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#importances of the various features while training\n",
    "clf.feature_importances_"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
